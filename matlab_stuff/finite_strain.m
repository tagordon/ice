function [P,K,G,L,F,U]=finite_strain(rho,rho0,K_in,G_in)%function: [P,K,G,L,F,U]=finite_strain(rho,rho0,K_in,G_in)% calculates P, bulk modulus, and shear modulus for input% L is compressional modulus, U is internal energy%    K_in=[Kpp Kp K] or [Kp K];%    G_in=[Gpp Gp G] or [Gp G];nk=length(K_in);ng=length(G_in);if (nk==3) Ko=K_in(3);Kp=K_in(2);Kpp=K_in(1);elseif (nk==2), Ko=K_in(2);Kp=K_in(1);endif (ng==3) Go=G_in(3);Gp=G_in(2);Gpp=G_in(1);elseif (ng==2), Go=G_in(2);Gp=G_in(1);endK1=Ko;K2=Ko*(5-3*Kp);if (nk==3),  K3=9*Ko^2*Kpp-Ko*(5-3*Kp)*(3*(Kp-4)+5);elseif(nk==2);  K3=0;  Kpp=(Ko*(5-3*Kp)*(3*(Kp-4)-5))/9*Ko^2;endG1=Go;G2=(5*Go-3*Gp*Ko);if (ng==3),  G3=9*Ko^2*Gpp-3*(Kp-4)*(5*Go-3*Ko*Gp)+5*(3*Kp-5)*Go;elseif(ng==2);  G3=0;endC1=3*Ko;C2=9*Ko*(4-Kp);if (nk==3),  C3=27*Ko^2*Kpp-3*Ko*(5-3*Kp)*(3*Kp-7)+81*Ko*(4-Kp);elseif (nk==2),  C3=81*Ko*(4-Kp);ende = 1/2*(1-(rho/rho0).^(2/3));f = 1/2*((rho/rho0).^(2/3)-1);fac=(1-2*e).^(5/2);K= fac.*(K1 +   K2*e      + K3/2*e.^2);G= fac.*(G1 +   G2*e      + G3/2*e.^2);P=-fac.*(C1*e + C2/2*e.^2 + C3/6*e.^3);L= K + 4/3*G;V0=1/rho0;U=9/2*Ko*V0*f.^2 + (9/2*Ko*V0*(Kp-4))*f.^3 + (27/8*Ko*V0*(Ko*Kpp+Kp*(Kp-7)+143/9))*f.^(4);F = 9/2*Ko*f.^2.*(1+(Kp-4)*f );  % 3rd order only
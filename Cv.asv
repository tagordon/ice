clear all
close all

% load calculated DoS (to be implemented here to change with gamma)
load spEvib_VII
load all_iceVII_literature_data_number.mat

P_max= 800e3;
T_max= 1000;

id=find(All_data(:,7) <= 16);
H2O_M = 18.01528 *1e-3 ; %kg/mol 

%  P (MPa)    T (K)    volume (m^3/kg)
data=[1e3*All_data(id,1)  All_data(id,2) All_data(id,3)*.1e-5./H2O_M];
V=data(:,3);

% Data uncertainties
dV = 4e-3*V; % 0.2% in m^3/kg
dP = 0.05*data(:,1)*1e-3; % in GPa  (20 MPa nominal ruby uncertainty)

% Mie Grueisen EOS fit parameters
gamma=0.7;
q=1;
Kp=5;
Vb=7.0441e-04;
x0 =([14e3 , Kp , .8e-3]); % K0, Kp, V
ifit=1;

Evib=fnval(spEvib, [data(:,2) (V(:)/Vb)]'); 
Pthermal=1e-6*gamma*V.^-1.*(V/Vb).^q.*Evib';

if ifit
    fun = @(x)MGval(x,Evib,gamma,data,Kp,q,Vb); % 
    bestx = fminsearch(fun,x0);
    K0 = bestx(1);
    Vo = bestx(3);
    Kp = bestx(2);
% 
else
    fun = @(x)MGval(x,Evib,gamma,data,Kp,q,Vb); % Variable Kp
    bestx = fminsearch(fun,x0([1 3]));
    K0 = bestx(1);
    Vo = bestx(2);
    Kp = x0(2);
end

Km=[Kp K0];

% "automatic" V, P parameters space boundary for plot and calculation
V_bound = ([.99*min(V) 1.01*max(V)]);
P_bound = ([min(data(:,2))-0.6*min(data(:,2)) max(data(:,2))+0.6*max(data(:,2))]);
Vc=linspace(V_bound(1),V_bound(2),200); 


Pc=finite_strain(Vc.^-1,Vo^-1,Km,[1 1]); % Cold compression curve
Pdc=finite_strain(V.^-1,Vo^-1,Km,[1 1]); % residual data - Cold compression curve
Pd=Pdc+Pthermal; % ideal data

figure(1)
subplot(2,1,1)
errorbar(V(:),data(:,1)/1e3-Pthermal(:)/1e3,dP,dP,dV,dV,'kd','markerfacecolor','r')
hold on
errorbar(V,data(:,1)/1e3,dP,dP,dV,dV,'ko','markerfacecolor','w')
plot(V(:),data(:,1)/1e3,'ko','markerfacecolor','w','MarkerSize',6)
plot(V(:),data(:,1)/1e3-Pthermal(:)/1e3,'kd','markerfacecolor','r','MarkerSize',6)

plot(Vc,Pc/1e3,'k--','linewidth',2)
%plot(V,Pd,'ko','markersize',10)
hold off
xlabel('Volume (m^3/kg)')
ylabel('Pressure (GPa)')
title(sprintf('K0 = %0.1f GPa Kp = %0.1f, rho_0 = %0.0f kg/m^3 gamma = %0.1f',K0/1e3, Kp, Vo^-1, gamma))

subplot(2, 1, 2)
